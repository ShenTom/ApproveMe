{
  "_args": [
    [
      {
        "raw": "slack",
        "scope": null,
        "escapedName": "slack",
        "name": "slack",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/edwardfeng/Documents/Side_Projects/CACTESWeb/ApproveMe/server"
    ]
  ],
  "_from": "slack@latest",
  "_id": "slack@10.0.0",
  "_inCache": true,
  "_location": "/slack",
  "_nodeVersion": "9.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/slack-10.0.0.tgz_1515611936852_0.05213192151859403"
  },
  "_npmUser": {
    "name": "brianleroux",
    "email": "b@brian.io"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "slack",
    "scope": null,
    "escapedName": "slack",
    "name": "slack",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/slack/-/slack-10.0.0.tgz",
  "_shasum": "4b46c174f89c9fa4a12e1da62a86beb0fb87f401",
  "_shrinkwrap": null,
  "_spec": "slack",
  "_where": "/Users/edwardfeng/Documents/Side_Projects/CACTESWeb/ApproveMe/server",
  "author": {
    "name": "Brian LeRoux",
    "email": "b@brian.io"
  },
  "browser": {
    "./test/_env.js": "./test/_env-browser.js",
    "./src/_exec.js": "./src/_exec-browser.js"
  },
  "bugs": {
    "url": "https://github.com/smallwins/slack/issues"
  },
  "dependencies": {
    "tiny-json-http": "^5.3.2"
  },
  "description": "Slack API client written in JS",
  "devDependencies": {
    "async": "^2.1.2",
    "browser-run": "^4.0.1",
    "browserify": "^14.1.0",
    "chalk": "^1.1.1",
    "cheerio": "^0.22.0",
    "envify": "^4.1.0",
    "glob": "^7.1.2",
    "jsmin": "^1.0.1",
    "mustache": "^2.2.1",
    "node-env-file": "^0.1.8",
    "nyc": "^11.2.1",
    "request": "^2.78.0",
    "tap": "^10.7.2",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Faxwp76vmlVaMl2tmpNVOmSx0Syy81NU8vM/DPry52p0AEfCmjlILXsb8sj2vK3qw3ZKGYewVe6/FHJDAJtrlA==",
    "shasum": "4b46c174f89c9fa4a12e1da62a86beb0fb87f401",
    "tarball": "https://registry.npmjs.org/slack/-/slack-10.0.0.tgz"
  },
  "gitHead": "4b2fda73cf2a16231be05e9d05d49e0a49fdd247",
  "homepage": "https://github.com/smallwins/slack#readme",
  "keywords": [
    "slack",
    "api",
    "client"
  ],
  "license": "Apache-2.0",
  "main": "index",
  "maintainers": [
    {
      "name": "danprince",
      "email": "dan@kumu.io"
    },
    {
      "name": "mbrevoort",
      "email": "mike@brevoort.com"
    },
    {
      "name": "matthewmueller",
      "email": "mattmuelle@gmail.com"
    },
    {
      "name": "dam",
      "email": "kristoferjoseph@gmail.com"
    },
    {
      "name": "brianleroux",
      "email": "b@brian.io"
    }
  ],
  "name": "slack",
  "nyc": {
    "exclude": [
      "src/_exec-electron.js",
      "test"
    ]
  },
  "optionalDependencies": {},
  "readme": "<h1 align=\"center\">\n  <img width=\"333px\" src=https://s3-us-west-1.amazonaws.com/bugbot/slack-js.svg alt=slack title=slack width=178>\n</h1>\n<p align=\"center\" style=\"font-size: 1.2rem;\">\n  <a href=https://www.npmjs.com/package/slack><img alt=npm src=https://badge.fury.io/js/slack.svg></a>\n  <a href=https://codeship.com/projects/121411><img alt=codeship src=https://img.shields.io/codeship/3fd641e0-81f4-0133-c733-22940a7a47c6.svg></a>\n  <a href=><img alt=\"coverage 93.85%\" src=https://img.shields.io/badge/coverage-93.85%25-brightgreen.svg></a>\n</p>\n\n### A [Slack Web API](https://api.slack.com/methods) client :seedling::raised_hands::two_hearts:\n\n- Written in modern JavaScript; tested for Node and the browser\n- Complete support for the [Slack Web API](https://api.slack.com/methods)\n- Perfect symmetry: JS method signatures match Web API docs\n- Choose your async adventure: all methods accept either a Node style errback or return a `Promise`\n- Opt into an OO style class instance that applies `token` to all methods\n- Well tested, CI, and Apache2 licensed\n- Only one dependency: `tiny-json-http`\n- Tiny: **7kb** browserified/minified\n\n## Install :star2::package:\n\n```\nnpm i slack\n```\n\n# Usage :sparkles::rocket:\n\n`slack` mirrors the published API docs exactly because its generated from those docs! The default interface are stateless functions and has remain unchanged since `1.0.0` and that will continue to be the case.\n\n```javascript\nvar slack = require('slack')\n\n// logs {args:{hello:'world'}}\nslack.api.test({hello:'world'}, console.log)\n\n// :new: opt into promises\nslack.api.test({nice:1}).then(console.log).catch(console.log)\n```\n\nDue to popular demand an OO style is supported. For an instance of `Slack` all methods come prebound with the `token` parameter applied.\n\n```javascript\nconst token = process.env.SLACK_BOT_TOKEN\nconst Slack = require('slack')\nconst bot = new Slack({token})\n\n// logs {args:{hyper:'card'}}\nbot.api.test({hyper:'card'}).then(console.log)\n```\n\nUsing `async`/`await` in Node 8.x:\n\n```javascript\nlet token = process.env.SLACK_BOT_TOKEN\nlet Slack = require('slack')\nlet bot = new Slack({token})\n\n;(async function main() {\n  // logs {args:{hyper:'card'}}\n  var result = await bot.api.test({hyper:'card'})\n  console.log(result)\n})()\n```\n\nChoose whichever style works best for your project deployment needs and team preference. :hearts::beer:\n\n### Error Handling\n\nSome methods (like [`slack.dialog.open`](https://api.slack.com/methods/dialog.open)) provide additional context for errors through a `response_metadata` object. This will be exposed as a `messages` properties on the errors that are thrown.\n\n```javascript\nslack.dialog.open(options).catch(err => {\n  console.log(err.messages)\n})\n```\n\n### Specialized Electron Support\n\nElectron ships its own HTTP module called `electron.net` which can have better performance and offers more extensive HTTP proxy handling. You can opt into Electron support by passing `useElectronNet:true` to the `Slack` constructor.\n\n```javascript\nimport {app, BrowserWindow, net} from 'electron'\nimport Slack from 'slack'\n\nconst slack = new Slack({useElectronNet:true})\n```\n\nYou can setup an HTTP authentication proxy logic by passing `login` to the constructor. \n\n```javascript\nfunction login(authInfo, callback) {\n  callback('username', 'password')\n}\n\nconst slack = new Slack({useElectronNet:true, login})\n```\n\n[Read more about `electron.net` from the source!](https://github.com/electron/electron/blob/master/docs/api/net.md)\n\n### Test Setup :lock::key::point_left:\n\nClone this repo and create a file called `.env` in the root with the following:\n\n```\nSLACK_BOT_TOKEN=xxxx\nSLACK_CLIENT_ID=xxxx\nSLACK_CLIENT_SECRET=xxxx\n```\n\nYou can get a `SLACK_TOKEN` for testing [here](https://api.slack.com/web). You need to register an app for a `SLACK_CLIENT_ID` and `SLACK_CLIENT_SECRET`. The tests require the app to have the `channels:history` scope. You can [read about bot tokens here](https://api.slack.com/docs/token-types#bot).\n\n## Testing :green_heart::green_heart::green_heart:\n\n:point_right: In Node:\n\n```\nnpm test\n```\n\n:point_right: Or the browser:\n\n```\nnpm run btest\n```\n\n# Slack Web API :tada::honeybee::triangular_flag_on_post:\n\nThe entire Slack Web API is supported. All method signatures accept a `params` object and either a Node style callback (an errback) or, if absent, it will return a `Promise`. Required params are documented inline below.\n\n- [`slack.api.test({})`](https://api.slack.com/methods/api.test)\n- [`slack.apps.permissions.info({token})`](https://api.slack.com/methods/apps.permissions.info)\n- [`slack.apps.permissions.request({token, scopes, trigger_id})`](https://api.slack.com/methods/apps.permissions.request)\n- [`slack.auth.revoke({token})`](https://api.slack.com/methods/auth.revoke)\n- [`slack.auth.test({token})`](https://api.slack.com/methods/auth.test)\n- [`slack.bots.info({token})`](https://api.slack.com/methods/bots.info)\n- [`slack.channels.archive({token, channel})`](https://api.slack.com/methods/channels.archive)\n- [`slack.channels.create({token, name})`](https://api.slack.com/methods/channels.create)\n- [`slack.channels.history({token, channel})`](https://api.slack.com/methods/channels.history)\n- [`slack.channels.info({token, channel})`](https://api.slack.com/methods/channels.info)\n- [`slack.channels.invite({token, channel, user})`](https://api.slack.com/methods/channels.invite)\n- [`slack.channels.join({token, name})`](https://api.slack.com/methods/channels.join)\n- [`slack.channels.kick({token, channel, user})`](https://api.slack.com/methods/channels.kick)\n- [`slack.channels.leave({token, channel})`](https://api.slack.com/methods/channels.leave)\n- [`slack.channels.list({token})`](https://api.slack.com/methods/channels.list)\n- [`slack.channels.mark({token, channel, ts})`](https://api.slack.com/methods/channels.mark)\n- [`slack.channels.rename({token, channel, name})`](https://api.slack.com/methods/channels.rename)\n- [`slack.channels.replies({token, channel, thread_ts})`](https://api.slack.com/methods/channels.replies)\n- [`slack.channels.setPurpose({token, channel, purpose})`](https://api.slack.com/methods/channels.setPurpose)\n- [`slack.channels.setTopic({token, channel, topic})`](https://api.slack.com/methods/channels.setTopic)\n- [`slack.channels.unarchive({token, channel})`](https://api.slack.com/methods/channels.unarchive)\n- [`slack.chat.delete({token, channel, ts})`](https://api.slack.com/methods/chat.delete)\n- [`slack.chat.getPermalink({token, channel, message_ts})`](https://api.slack.com/methods/chat.getPermalink)\n- [`slack.chat.meMessage({token, channel, text})`](https://api.slack.com/methods/chat.meMessage)\n- [`slack.chat.postEphemeral({token, channel, text, user})`](https://api.slack.com/methods/chat.postEphemeral)\n- [`slack.chat.postMessage({token, channel, text})`](https://api.slack.com/methods/chat.postMessage)\n- [`slack.chat.unfurl({token, channel, ts, unfurls})`](https://api.slack.com/methods/chat.unfurl)\n- [`slack.chat.update({token, channel, text, ts})`](https://api.slack.com/methods/chat.update)\n- [`slack.conversations.archive({token, channel})`](https://api.slack.com/methods/conversations.archive)\n- [`slack.conversations.close({token, channel})`](https://api.slack.com/methods/conversations.close)\n- [`slack.conversations.create({token, name})`](https://api.slack.com/methods/conversations.create)\n- [`slack.conversations.history({token, channel})`](https://api.slack.com/methods/conversations.history)\n- [`slack.conversations.info({token, channel})`](https://api.slack.com/methods/conversations.info)\n- [`slack.conversations.invite({token, channel, users})`](https://api.slack.com/methods/conversations.invite)\n- [`slack.conversations.join({token, channel})`](https://api.slack.com/methods/conversations.join)\n- [`slack.conversations.kick({token, channel, user})`](https://api.slack.com/methods/conversations.kick)\n- [`slack.conversations.leave({token, channel})`](https://api.slack.com/methods/conversations.leave)\n- [`slack.conversations.list({token})`](https://api.slack.com/methods/conversations.list)\n- [`slack.conversations.members({token, channel})`](https://api.slack.com/methods/conversations.members)\n- [`slack.conversations.open({token})`](https://api.slack.com/methods/conversations.open)\n- [`slack.conversations.rename({token, channel, name})`](https://api.slack.com/methods/conversations.rename)\n- [`slack.conversations.replies({token, channel, ts})`](https://api.slack.com/methods/conversations.replies)\n- [`slack.conversations.setPurpose({token, channel, purpose})`](https://api.slack.com/methods/conversations.setPurpose)\n- [`slack.conversations.setTopic({token, channel, topic})`](https://api.slack.com/methods/conversations.setTopic)\n- [`slack.conversations.unarchive({token, channel})`](https://api.slack.com/methods/conversations.unarchive)\n- [`slack.dialog.open({token, dialog, trigger_id})`](https://api.slack.com/methods/dialog.open)\n- [`slack.dnd.endDnd({token})`](https://api.slack.com/methods/dnd.endDnd)\n- [`slack.dnd.endSnooze({token})`](https://api.slack.com/methods/dnd.endSnooze)\n- [`slack.dnd.info({token})`](https://api.slack.com/methods/dnd.info)\n- [`slack.dnd.setSnooze({token, num_minutes})`](https://api.slack.com/methods/dnd.setSnooze)\n- [`slack.dnd.teamInfo({token})`](https://api.slack.com/methods/dnd.teamInfo)\n- [`slack.emoji.list({token})`](https://api.slack.com/methods/emoji.list)\n- [`slack.files.comments.add({token, comment, file})`](https://api.slack.com/methods/files.comments.add)\n- [`slack.files.comments.delete({token, file, id})`](https://api.slack.com/methods/files.comments.delete)\n- [`slack.files.comments.edit({token, comment, file, id})`](https://api.slack.com/methods/files.comments.edit)\n- [`slack.files.delete({token, file})`](https://api.slack.com/methods/files.delete)\n- [`slack.files.info({token, file})`](https://api.slack.com/methods/files.info)\n- [`slack.files.list({token})`](https://api.slack.com/methods/files.list)\n- [`slack.files.revokePublicURL({token, file})`](https://api.slack.com/methods/files.revokePublicURL)\n- [`slack.files.sharedPublicURL({token, file})`](https://api.slack.com/methods/files.sharedPublicURL)\n- [`slack.files.upload({token})`](https://api.slack.com/methods/files.upload)\n- [`slack.groups.archive({token, channel})`](https://api.slack.com/methods/groups.archive)\n- [`slack.groups.create({token, name})`](https://api.slack.com/methods/groups.create)\n- [`slack.groups.createChild({token, channel})`](https://api.slack.com/methods/groups.createChild)\n- [`slack.groups.history({token, channel})`](https://api.slack.com/methods/groups.history)\n- [`slack.groups.info({token, channel})`](https://api.slack.com/methods/groups.info)\n- [`slack.groups.invite({token, channel, user})`](https://api.slack.com/methods/groups.invite)\n- [`slack.groups.kick({token, channel, user})`](https://api.slack.com/methods/groups.kick)\n- [`slack.groups.leave({token, channel})`](https://api.slack.com/methods/groups.leave)\n- [`slack.groups.list({token})`](https://api.slack.com/methods/groups.list)\n- [`slack.groups.mark({token, channel, ts})`](https://api.slack.com/methods/groups.mark)\n- [`slack.groups.open({token, channel})`](https://api.slack.com/methods/groups.open)\n- [`slack.groups.rename({token, channel, name})`](https://api.slack.com/methods/groups.rename)\n- [`slack.groups.replies({token, channel, thread_ts})`](https://api.slack.com/methods/groups.replies)\n- [`slack.groups.setPurpose({token, channel, purpose})`](https://api.slack.com/methods/groups.setPurpose)\n- [`slack.groups.setTopic({token, channel, topic})`](https://api.slack.com/methods/groups.setTopic)\n- [`slack.groups.unarchive({token, channel})`](https://api.slack.com/methods/groups.unarchive)\n- [`slack.im.close({token, channel})`](https://api.slack.com/methods/im.close)\n- [`slack.im.history({token, channel})`](https://api.slack.com/methods/im.history)\n- [`slack.im.list({token})`](https://api.slack.com/methods/im.list)\n- [`slack.im.mark({token, channel, ts})`](https://api.slack.com/methods/im.mark)\n- [`slack.im.open({token, user})`](https://api.slack.com/methods/im.open)\n- [`slack.im.replies({token, channel, thread_ts})`](https://api.slack.com/methods/im.replies)\n- [`slack.migration.exchange({token, users})`](https://api.slack.com/methods/migration.exchange)\n- [`slack.mpim.close({token, channel})`](https://api.slack.com/methods/mpim.close)\n- [`slack.mpim.history({token, channel})`](https://api.slack.com/methods/mpim.history)\n- [`slack.mpim.list({token})`](https://api.slack.com/methods/mpim.list)\n- [`slack.mpim.mark({token, channel, ts})`](https://api.slack.com/methods/mpim.mark)\n- [`slack.mpim.open({token, users})`](https://api.slack.com/methods/mpim.open)\n- [`slack.mpim.replies({token, channel, thread_ts})`](https://api.slack.com/methods/mpim.replies)\n- [`slack.oauth.access({client_id, client_secret, code})`](https://api.slack.com/methods/oauth.access)\n- [`slack.oauth.token({client_id, client_secret, code})`](https://api.slack.com/methods/oauth.token)\n- [`slack.pins.add({token, channel})`](https://api.slack.com/methods/pins.add)\n- [`slack.pins.list({token, channel})`](https://api.slack.com/methods/pins.list)\n- [`slack.pins.remove({token, channel})`](https://api.slack.com/methods/pins.remove)\n- [`slack.reactions.add({token, name})`](https://api.slack.com/methods/reactions.add)\n- [`slack.reactions.get({token})`](https://api.slack.com/methods/reactions.get)\n- [`slack.reactions.list({token})`](https://api.slack.com/methods/reactions.list)\n- [`slack.reactions.remove({token, name})`](https://api.slack.com/methods/reactions.remove)\n- [`slack.reminders.add({token, text, time})`](https://api.slack.com/methods/reminders.add)\n- [`slack.reminders.complete({token, reminder})`](https://api.slack.com/methods/reminders.complete)\n- [`slack.reminders.delete({token, reminder})`](https://api.slack.com/methods/reminders.delete)\n- [`slack.reminders.info({token, reminder})`](https://api.slack.com/methods/reminders.info)\n- [`slack.reminders.list({token})`](https://api.slack.com/methods/reminders.list)\n- [`slack.rtm.connect({token})`](https://api.slack.com/methods/rtm.connect)\n- [`slack.rtm.start({token})`](https://api.slack.com/methods/rtm.start)\n- [`slack.search.all({token, query})`](https://api.slack.com/methods/search.all)\n- [`slack.search.files({token, query})`](https://api.slack.com/methods/search.files)\n- [`slack.search.messages({token, query})`](https://api.slack.com/methods/search.messages)\n- [`slack.stars.add({token})`](https://api.slack.com/methods/stars.add)\n- [`slack.stars.list({token})`](https://api.slack.com/methods/stars.list)\n- [`slack.stars.remove({token})`](https://api.slack.com/methods/stars.remove)\n- [`slack.team.accessLogs({token})`](https://api.slack.com/methods/team.accessLogs)\n- [`slack.team.billableInfo({token})`](https://api.slack.com/methods/team.billableInfo)\n- [`slack.team.info({token})`](https://api.slack.com/methods/team.info)\n- [`slack.team.integrationLogs({token})`](https://api.slack.com/methods/team.integrationLogs)\n- [`slack.team.profile.get({token})`](https://api.slack.com/methods/team.profile.get)\n- [`slack.usergroups.create({token, name})`](https://api.slack.com/methods/usergroups.create)\n- [`slack.usergroups.disable({token, usergroup})`](https://api.slack.com/methods/usergroups.disable)\n- [`slack.usergroups.enable({token, usergroup})`](https://api.slack.com/methods/usergroups.enable)\n- [`slack.usergroups.list({token})`](https://api.slack.com/methods/usergroups.list)\n- [`slack.usergroups.update({token, usergroup})`](https://api.slack.com/methods/usergroups.update)\n- [`slack.usergroups.users.list({token, usergroup})`](https://api.slack.com/methods/usergroups.users.list)\n- [`slack.usergroups.users.update({token, usergroup, users})`](https://api.slack.com/methods/usergroups.users.update)\n- [`slack.users.deletePhoto({token})`](https://api.slack.com/methods/users.deletePhoto)\n- [`slack.users.getPresence({token, user})`](https://api.slack.com/methods/users.getPresence)\n- [`slack.users.identity({token})`](https://api.slack.com/methods/users.identity)\n- [`slack.users.info({token, user})`](https://api.slack.com/methods/users.info)\n- [`slack.users.list({token})`](https://api.slack.com/methods/users.list)\n- [`slack.users.lookupByEmail({token, email})`](https://api.slack.com/methods/users.lookupByEmail)\n- [`slack.users.profile.get({token})`](https://api.slack.com/methods/users.profile.get)\n- [`slack.users.profile.set({token})`](https://api.slack.com/methods/users.profile.set)\n- [`slack.users.setActive({token})`](https://api.slack.com/methods/users.setActive)\n- [`slack.users.setPhoto({token, image})`](https://api.slack.com/methods/users.setPhoto)\n- [`slack.users.setPresence({token, presence})`](https://api.slack.com/methods/users.setPresence)\n\n# Contributing\n\nThe code for the client is generated by scraping the [Slack Web API documentation](https://api.slack.com/methods).\nRegenerate from the latest Slack documentation by running :runner::\n\n```\nnpm run generate\n```\n\nPortions of this README are generated as well; to make edits, update `readme.tmpl`\nand run the same command :cloud::umbrella::sunny::sunflower:.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/smallwins/slack.git"
  },
  "scripts": {
    "btest": "./scripts/browser-test | browser-run | tap-spec",
    "cov": "nyc tape test/*-test.js",
    "etest": "./scripts/electron-test | browser-run --node  | tap-spec",
    "generate": "./scripts/generate-api-json > src/api.json && ./scripts/generate-readme && ./scripts/generate-types",
    "pkg": "./scripts/browser-pkg && jsmin -o slack.min.js slack.js && jsmin -o slack-testing.min.js slack-testing.js",
    "standalone": "browserify . --node --standalone slack > slack.node.js && jsmin -o slack.node.min.js slack.node.js",
    "start": "./scripts/repl",
    "test": "tape test/*-test.js | tap-spec"
  },
  "types": "./slack.d.ts",
  "version": "10.0.0"
}
